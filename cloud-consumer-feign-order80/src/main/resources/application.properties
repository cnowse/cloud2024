spring.application.name=cloud-consumer-order80
server.port=80
spring.cloud.consul.host=localhost
spring.cloud.consul.port=8500
spring.cloud.consul.discovery.service-name=${spring.application.name}
# 优先使用服务 IP 名
spring.cloud.consul.discovery.prefer-ip-address=true
#spring.cloud.openfeign.client.config.default.connect-timeout=3000
#spring.cloud.openfeign.client.config.default.read-timeout=3000
spring.cloud.openfeign.client.config.cloud-payment-service.connect-timeout=20000
spring.cloud.openfeign.client.config.cloud-payment-service.read-timeout=20000
spring.cloud.openfeign.client.httpclient.hc5.enable=true
spring.cloud.openfeign.client.compression.request.enabled=true
spring.cloud.openfeign.client.compression.request.min-request-size=2048
spring.cloud.openfeign.client.compression.request.mime-types=text/xml,application/xml,application/json
spring.cloud.openfeign.client.compression.response.enabled=true

spring.cloud.openfeign.circuitbreaker.enabled=true
spring.cloud.openfeign.circuitbreaker.group.enabled=true

# 基于次数的熔断机制
#resilience4j.circuitbreaker.configs.default.failure-rate-threshold=50
#resilience4j.circuitbreaker.configs.default.sliding-window-type=count_based
#resilience4j.circuitbreaker.configs.default.sliding-window-size=6
#resilience4j.circuitbreaker.configs.default.minimum-number-of-calls=6
#resilience4j.circuitbreaker.configs.default.automatic-transition-from-open-to-half-open-enabled=true
#resilience4j.circuitbreaker.configs.default.wait-duration-in-open-state=5s
#resilience4j.circuitbreaker.configs.default.permitted-number-of-calls-in-half-open-state=2
#resilience4j.circuitbreaker.configs.default.record-exceptions[0]=java.lang.Exception
#resilience4j.circuitbreaker.instances.cloud-payment-service.base-config=default

# 基础时间的熔断机制
#resilience4j.timelimiter.configs.default.timeout-duration=10s
#resilience4j.circuitbreaker.configs.default.failure-rate-threshold=50
#resilience4j.circuitbreaker.configs.default.slow-call-duration-threshold=2s
#resilience4j.circuitbreaker.configs.default.slow-call-rate-threshold=30
#resilience4j.circuitbreaker.configs.default.sliding-window-type=time_based
#resilience4j.circuitbreaker.configs.default.sliding-window-size=2
#resilience4j.circuitbreaker.configs.default.minimum-number-of-calls=2
#resilience4j.circuitbreaker.configs.default.permitted-number-of-calls-in-half-open-state=2
#resilience4j.circuitbreaker.configs.default.wait-duration-in-open-state=5s
#resilience4j.circuitbreaker.configs.default.record-exceptions[0]=java.lang.Exception
#resilience4j.circuitbreaker.instances.cloud-payment-service.base-config=default

# 隔离允许并发线程执行的最大数量
#resilience4j.bulkhead.configs.default.max-concurrent-calls=2
## 并发数达到 max-concurrent-calls 配置的值时，新的线程阻塞时间，在该时间内，不会进入 fallback
#resilience4j.bulkhead.instances.cloud-payment-service.base-config=default
#resilience4j.timelimiter.configs.default.timeout-duration=20s


#timelimiter默认限制远程1s，超过报错不好演示效果所以加上10秒
#resilience4j.timelimiter.configs.default.timeout-duration=10s
#resilience4j.thread-pool-bulkhead.configs.default.core-thread-pool-size=1
#resilience4j.thread-pool-bulkhead.configs.default.max-thread-pool-size=1
#resilience4j.thread-pool-bulkhead.configs.default.queue-capacity=1
#resilience4j.bulkhead.instances.cloud-payment-service.base-config=default

####resilience4j ratelimiter 限流的例子
#在一次刷新周期内，允许执行的最大请求数
resilience4j.ratelimiter.configs.default.limitForPeriod=2
# 限流器每隔limitRefreshPeriod刷新一次，将允许处理的最大请求数量重置为limitForPeriod
resilience4j.ratelimiter.configs.default.limitRefreshPeriod=1s
# 线程等待权限的默认等待时间
resilience4j.ratelimiter.configs.default.timeout-duration=1
resilience4j.ratelimiter.instances.cloud-payment-service.baseConfig=default

#logging.level.cn.cnowse.feign.PayFeignApi=debug



# zipkin图形展现地址和采样率设置
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
# 采样率默认为0.1(0.1就是10次只能有一次被记录下来)，值越大收集越及时。
management.tracing.sampling.probability=1.0